Buildroot: %{_builddir}/%{name}-root
Name: @component-prefix@@component-name@
Version: @component-version@
Release: @component-release@@component-disttag@
Summary: EMIR Client Daemon
License: APL 2.0
Distribution: RedHat
Group: Infrastructure Services
URL: https://github.com/eu-emi/emiregistry
Requires: python >= 2.4.3, python-simplejson
BuildArch: @component-architecture@
Packager: EMI emir@niif.hu
@preamble@

%description
A Service Registry conceived during the EMI project. 
Its main goals to discover all the Service endpoints that 
exist and hence obtain future information about them. The key 
part to the service registry is the management procedures and 
policies which it implements. These are dictated by the stakeholders 
of the various infrastructures and have been implemented in the registry.

This package contains the EMIR server.

%changelog
* Wed Feb 29 2012 Gabor Szigeti <szigeti@niif.hu>
- Fixing mongodb dependency, resource bugs

* Wed Nov 30 2011 Ivan Marton <martoni@niif.hu>
- Fixing paths, init scripts, related directories
- creating proper user and group
- eliminating UNICORE heritage

* Fri Nov 02 2011 Shiraz Memon <emir@niif.hu> 
- Initial rpm package

@install_command@

%files
%defattr(755, emi, emi, -)
#
# Config files
#
%dir %attr(755 emi emi) "/etc/emi/emird"
# %config(noreplace) %attr(0644 emi emi) "/etc/emi/emir/log4j.properties"
# %config(noreplace) %attr(0644 emi emi) "/etc/emi/emir/users/testUdb-strict.xml"
# %config(noreplace) %attr(0644 emi emi) "/etc/emi/emir/users/testUdb-regexp.xml"
# %config(noreplace) %attr(0644 emi emi) "/etc/emi/emir/xacml2Policies/01coreResources.xml"
# %config(noreplace) %attr(0644 emi emi) "/etc/emi/emir/xacml2Policies/99finalDeny.xml"
# %config(noreplace) %attr(0600 emi emi) "/etc/emi/emir/dsr.config"
# %config(noreplace) %attr(0600 emi emi) "/etc/emi/emir/emir.acl"
# %config(noreplace) %attr(0600 emi emi) "/etc/emi/emir/inputfilters"
# %config(noreplace) %attr(0600 emi emi) "/etc/emi/emir/outputfilters"
# %config(noreplace) %attr(0600 emi emi) "/etc/emi/emir/xacml2.config"
%config(noreplace) %attr(0755 emi emi) "/etc/rc.d/init.d/emird"
%config(noreplace) %attr(0755 emi emi) "/etc/emi/emird/emird.ini"



# %attr(0755 - -) "/usr/sbin/emir-start.sh"
# %attr(0755 - -) "/usr/sbin/emir-stop.sh"
# %attr(0755 - -) "/usr/sbin/emir-status.sh"

%attr(0755 - -) "/usr/sbin/emird"

#
# Documentation
#
%docdir %attr(755 root root) "/usr/share/doc/emi/emird/"
"/usr/share/doc/emi/emird/*"

#
# python files
#
%attr(755 root root) %dir "/usr/lib/emi/emird"
%attr(644 root root) "/usr/lib/emi/emird/*.py"

#
# logs
#
%dir %attr(0700 emi emi) "/var/log/emi/emird"
%dir %attr(0700 emi emi) "/var/run/emi/emird"
# %dir %attr(0700 emi emi) "/var/lib/emi"
# %dir %attr(0700 emi emi) "/var/lib/emi/emird"


#
# dealing with .gitignores
#
# %attr(0700 emi emi) "/var/lib/emi/emir/data/.gitignore"
# %attr(0700 emi emi) "/var/log/emi/emir/.gitignore"
# %attr(0700 emi emi) "/var/run/emi/emir/.gitignore"
# %attr(0700 emi emi) "/usr/share/doc/emi/emir/.gitignore"

#
# dir %attr(0700 emi emi) "/var/lib/emir"
#

%pre
/usr/sbin/groupadd -r emi 2>/dev/null || :
/usr/sbin/useradd -c "EMI" -g emi \
    -s /sbin/nologin -r -d /usr/share/emi emi 2>/dev/null || :
	
%post
if [ -e /sbin/chkconfig ]; then
    /sbin/chkconfig --add emi-emir
elif [ -e /sbin/insserv ]; then
    /sbin/insserv emi-emir
fi


%preun
if [ -e /sbin/chkconfig ]; then
  if [ "$1" = "0" ]; then 
      /etc/init.d/emi-emir stop >/dev/null 2>&1
      /sbin/chkconfig --del emi-emir
  fi
elif [ -e /sbin/insserv ]; then
  if [ "$1" = "0" ]; then 
      /etc/init.d/emi-emir stop >/dev/null 2>&1
      /sbin/insserv -r emi-emir
  fi
fi
