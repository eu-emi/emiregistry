#########################################
#####EMIR Server General configuration###
#########################################
#Address could either start with http or https (SSL/TLS), 
#if running on "https" mode the Authentication and Authorisation properties must be properly defined
emir.address=https://127.0.0.1:54321

#The anonymous http port number. Setting the property will start an additional 'http' server (without SSL/TLS)
#only if the above server address is 'https' (with SSL/TLS). It will provide 'anonymous' access to the 
#query interface (i.e. /services resource).    
#emir.address.anonymousPort=8080


#########################################
#####EMIR Server Topology configuration##
#########################################

#Indicating whether the registry node is global. If set
#to true then it will replicate among peer global registries 
#while ignoring the 'registry.parent.url' property. This implies
#the current instance will not have parent, hence the "emir.parentAddress" 
#property will be discarded
#registry.global.enable=true

#List of URLs for the list of InfoProviders. This URL(s) is/are
#important for the connection into the global network.
#registry.global.providerlist=http://emiregistry.server.url/EMIR.list
#
#OR
#
#emir.global.providerList=<url1>/EMIR_A.list, <url2>/EMIR_B.list


#It determines the number of neighbors as a function of the actual
#number of member nodes of the network.
#default value is 2
#emir.global.sparsity=2

#Retry specifies how many times communication to GSR have to 
#fail/timeout to start treating it as unavailable.
#default value is 5
#emir.global.retry=5

#Period for checking the entries in the soft state database and 
#strip the expired entries (but still keep them).
#default value is 12 (hours)
#emir.global.etValid=12

#Extend the home/a.memon/certs/emiregistry/testbed/trustedexpiration time with this time delay.
#default value is 2 (hours)
#emir.global.softStateDelay=2

#Period for checking the entries in the soft state database and 
#remove the expired entries.
#default value is 24 (hours)
#emir.global.etRemove=24

#parent emir configuration
#emir.parentAddress=http://localhost:9000

############################
####Service Record Filter###
############################
#This property scans the incoming registration requests and 
#filter out the matched Service records, defined in the input filters
#file
#
#emir.record.blockList.incoming=src/test/resources/conf/inputfilters
#
#Restrict the amount of service records sent to the parent registry node 
#would be defined in the output filters file
#
#emir.record.blockList.outgoing=src/test/resources/conf/outputfilters

#General container filters, are defined as comma separated fully qualified class names (only for Developers)  
#emir.interceptors.request=pkg.Class1,pkg.Class2
#
#emir.interceptors.response=pkg.Class1,pkg.Class2


#Maximum assignable lifetime for the service endpoint records, the value is a number of days
#emir.record.expiryMaximum=1825

#the default expiration time for service endpoint record. The minimum value is 1
#emir.record.expiryDefault=30

#Maximum Number of Service Endpoints in a single registration request
#emir.record.maximum=100

############################
####MongoDB configuration###
############################
emir.mongodb.hostName=localhost
emir.mongodb.port=27017
emir.mongodb.dbName=emiregistry
emir.mongodb.collectionName=services

# MongoDB authentication information
#emir.mongodb.userName=user
#emir.mongodb.password=pwd

##############################
#### Logging configuration ###
##############################
# It must be set in the server start-up script


############################
#####   Security  ##########
############################
#The security will be enabled automatically if "registry.scheme" field is set to "https"

###### Authentication ######
emir.security.truststore.type=keystore
emir.security.truststore.keystorePath=src/test/resources/certs/demo-server.jks
emir.security.truststore.keystorePassword=emi
emir.security.truststore.keystoreFormat=jks

emir.security.credential.format=pkcs12
emir.security.credential.path=src/test/resources/certs/demo-server.p12
emir.security.credential.password=emi
#emir.security.credential.keyAlias=

###### Authorisation #######
#There are two alternatives to authorize the EMIR clients
# I.  Access Control List (ACL)
# II. XACML Policies
#
#Note: One of the above mechanisms can be used to enable the access control,   
#      the default authorisation is ACL file based. Enabling the first option 
#      would automatically disables the xacml authorisation. If both are specified 
#      the ACL takes the priority

# I. Access Control List (ACL)
#emir.security.accesscontrol.acl=src/test/resources/conf/emir.acl

# II. XACML Policies
#
# Authorisation attribute source configuration
# 
# EMIR maps the identity of the Grid user (e.g. 
# her certificate or distinguished name) to attributes
# (like role).
#
# This property is a space separated list of attribute 
# source names, which are then configured in detail below.
# The named attribute sources are queried in the given order.
#
emir.security.attributes.order=FILE

#
# configuration of the 'FILE' attribute source
#
emir.security.attributes.FILE.class=eu.emi.emir.aip.FileAttributeSource
# path to the mapfile
emir.security.attributes.FILE.file=src/test/resources/conf/users/testUdb-strict.xml
# how to match entries: strict or regexp
emir.security.attributes.FILE.matching=strict

# the XACML config file which contains the list of security policy files
#
emir.security.accesscontrol.pdpConfig=src/test/resources/conf/xacml2.config

#
# the XACML PDP implementation class
#
emir.security.accesscontrol.pdp=eu.emi.emir.pdp.local.LocalHerasafPDP



#####################################################
######### Jetty (Advanced Configuration)  ###########
#####################################################
#Web server configuration, should be changed if the expected load is high. The default values are set

#emir.jetty.maxIdleTime=30000
#Maximum number of threads to have in the Jetty thread pool for connections serving
#emir.jetty.maxThreads=255

#Minimum number of threads to have in the Jetty thread pool for connections serving.
#emir.jetty.minThreads=1

#In low resource conditions, time (in ms.) before an idle connection will time out
#emir.jetty.lowResourceMaxIdleTime=100

#Socket linger time
#emir.jetty.soLingerTime=-1
